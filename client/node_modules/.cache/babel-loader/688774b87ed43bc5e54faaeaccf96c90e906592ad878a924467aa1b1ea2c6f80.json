{"ast":null,"code":"var _jsxFileName = \"/Users/arnold/Documents/Programming/Development/chowstagram/client/src/components/Friend.jsx\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { setFriends } from 'state';\nimport { PersonAddOutlined, PersonRemoveOutlined } from '@mui/icons-material';\nimport { Box, IconButton, Typography, useTheme } from '@mui/material';\nimport FlexBetween from './FlexBetween';\nimport UserImage from './UserImage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Friend = _ref => {\n  _s();\n  let {\n    friendId,\n    name,\n    subtitle,\n    userPicturePath\n  } = _ref;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    _id\n  } = useSelector(state => state.user);\n  const token = useSelector(state => state.token);\n  const friends = useSelector(state => state.user.friends);\n  const {\n    palette\n  } = useTheme();\n  const primaryLight = palette.primary.light;\n  const primaryDark = palette.primary.dark;\n  const main = palette.neutral.main;\n  const medium = palette.neutral.medium;\n  const isFriend = friends.find(friend => friend._id === friendId);\n  const patchFriend = async () => {\n    const response = await fetch(`http://localhost:3001/users/${_id}/${friendId}`, {\n      method: 'PATCH',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    dispatch(setFriends({\n      friends: data\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(FlexBetween, {\n    children: [/*#__PURE__*/_jsxDEV(FlexBetween, {\n      gap: \"1rem\",\n      children: [/*#__PURE__*/_jsxDEV(UserImage, {\n        image: userPicturePath,\n        size: \"55px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        onClick: () => {\n          navigate(`/profile/${friendId}`);\n          navigate(0);\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: main,\n          variant: \"h5\",\n          fontWeight: \"500\",\n          sx: {\n            '&:hover': {\n              color: palette.primary.light,\n              cursor: 'pointer'\n            }\n          },\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: medium,\n          fontSize: \"0.75rem\",\n          children: subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: () => patchFriend(),\n      sx: {\n        backgroundColor: primaryLight,\n        p: '0.6rem'\n      },\n      children: isFriend ? /*#__PURE__*/_jsxDEV(PersonRemoveOutlined, {\n        sx: {\n          color: primaryDark\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(PersonAddOutlined, {\n        sx: {\n          color: primaryDark\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Friend, \"9rG8sstVAHovKQ3y9VnxJ+fEuh4=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector, useSelector, useTheme];\n});\n_c = Friend;\nexport default Friend;\nvar _c;\n$RefreshReg$(_c, \"Friend\");","map":{"version":3,"names":["useDispatch","useSelector","useNavigate","setFriends","PersonAddOutlined","PersonRemoveOutlined","Box","IconButton","Typography","useTheme","FlexBetween","UserImage","Friend","friendId","name","subtitle","userPicturePath","dispatch","navigate","_id","state","user","token","friends","palette","primaryLight","primary","light","primaryDark","dark","main","neutral","medium","isFriend","find","friend","patchFriend","response","fetch","method","headers","Authorization","data","json","color","cursor","backgroundColor","p"],"sources":["/Users/arnold/Documents/Programming/Development/chowstagram/client/src/components/Friend.jsx"],"sourcesContent":["import {\n  useDispatch,\n  useSelector,\n} from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { setFriends } from 'state';\n\nimport {\n  PersonAddOutlined,\n  PersonRemoveOutlined,\n} from '@mui/icons-material';\nimport {\n  Box,\n  IconButton,\n  Typography,\n  useTheme,\n} from '@mui/material';\n\nimport FlexBetween from './FlexBetween';\nimport UserImage from './UserImage';\n\nconst Friend = ({ friendId, name, subtitle, userPicturePath }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { _id } = useSelector((state) => state.user);\n  const token = useSelector((state) => state.token);\n  const friends = useSelector((state) => state.user.friends);\n\n  const { palette } = useTheme();\n  const primaryLight = palette.primary.light;\n  const primaryDark = palette.primary.dark;\n  const main = palette.neutral.main;\n  const medium = palette.neutral.medium;\n\n  const isFriend = friends.find((friend) => friend._id === friendId);\n\n  const patchFriend = async () => {\n    const response = await fetch(\n      `http://localhost:3001/users/${_id}/${friendId}`,\n      {\n        method: 'PATCH',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n    const data = await response.json();\n    dispatch(setFriends({ friends: data }));\n  };\n\n  return (\n    <FlexBetween>\n      <FlexBetween gap=\"1rem\">\n        <UserImage\n          image={userPicturePath}\n          size=\"55px\"\n        />\n        <Box\n          onClick={() => {\n            navigate(`/profile/${friendId}`);\n            navigate(0);\n          }}\n        >\n          <Typography\n            color={main}\n            variant=\"h5\"\n            fontWeight=\"500\"\n            sx={{\n              '&:hover': {\n                color: palette.primary.light,\n                cursor: 'pointer',\n              },\n            }}\n          >\n            {name}\n          </Typography>\n          <Typography\n            color={medium}\n            fontSize=\"0.75rem\"\n          >\n            {subtitle}\n          </Typography>\n        </Box>\n      </FlexBetween>\n      <IconButton\n        onClick={() => patchFriend()}\n        sx={{ backgroundColor: primaryLight, p: '0.6rem' }}\n      >\n        {isFriend ? (\n          <PersonRemoveOutlined sx={{ color: primaryDark }} />\n        ) : (\n          <PersonAddOutlined sx={{ color: primaryDark }} />\n        )}\n      </IconButton>\n    </FlexBetween>\n  );\n};\n\nexport default Friend;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}