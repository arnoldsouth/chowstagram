{"ast":null,"code":"var _jsxFileName = \"/Users/arnold/Documents/Programming/Development/chowstagram/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { BrowserRouter, Navigate, Route, Routes } from 'react-router-dom';\nimport HomePage from 'scenes/homePage';\nimport LoginPage from 'scenes/loginPage';\nimport ProfilePage from 'scenes/profilePage';\nimport { themeSettings } from 'theme';\nimport { CssBaseline, ThemeProvider } from '@mui/material';\nimport { createTheme } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // whenever we want to grab information from the store, we use useSelector((state)=>state._) to grab the state from the correct reducer\n  // grab `mode` from our state/store using useSelector()\n  const mode = useSelector(state => state.mode);\n\n  // do once in each app for regarding setting up theme: pass in `mode` we grabbed from the store to themeSettings as a parameter\n  const theme = useMemo(() => createTheme(themeSettings(mode)), [mode]);\n\n  // we grab the state.token. if the token exists, then we are authorized, and we add this to our routes\n  const isAuth = Boolean(useSelector(state => state.token));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/home\",\n            element: isAuth ? /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/profile/:userId\",\n            element: isAuth ? /*#__PURE__*/_jsxDEV(ProfilePage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9xFi1NqrsFrk0/i0ItItR1sT0cI=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useMemo","useSelector","BrowserRouter","Navigate","Route","Routes","HomePage","LoginPage","ProfilePage","themeSettings","CssBaseline","ThemeProvider","createTheme","App","mode","state","theme","isAuth","Boolean","token"],"sources":["/Users/arnold/Documents/Programming/Development/chowstagram/client/src/App.js"],"sourcesContent":["import { useMemo } from 'react';\n\nimport { useSelector } from 'react-redux';\nimport {\n  BrowserRouter,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport HomePage from 'scenes/homePage';\nimport LoginPage from 'scenes/loginPage';\nimport ProfilePage from 'scenes/profilePage';\nimport { themeSettings } from 'theme';\n\nimport {\n  CssBaseline,\n  ThemeProvider,\n} from '@mui/material';\nimport { createTheme } from '@mui/material/styles';\n\nconst App = () => {\n  // whenever we want to grab information from the store, we use useSelector((state)=>state._) to grab the state from the correct reducer\n  // grab `mode` from our state/store using useSelector()\n  const mode = useSelector((state) => state.mode);\n\n  // do once in each app for regarding setting up theme: pass in `mode` we grabbed from the store to themeSettings as a parameter\n  const theme = useMemo(() => createTheme(themeSettings(mode)), [mode]);\n\n  // we grab the state.token. if the token exists, then we are authorized, and we add this to our routes\n  const isAuth = Boolean(useSelector((state) => state.token));\n\n  return (\n    <div className=\"app\">\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          {/* CssBaseline is essentially css reset but for mui */}\n          <CssBaseline />\n\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<LoginPage />}\n            />\n\n            <Route\n              path=\"/home\"\n              element={isAuth ? <HomePage /> : <Navigate to=\"/\" />}\n            />\n\n            <Route\n              path=\"/profile/:userId\"\n              element={isAuth ? <ProfilePage /> : <Navigate to=\"/\" />}\n            />\n          </Routes>\n        </ThemeProvider>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,OAAO;AAE/B,SAASC,WAAW,QAAQ,aAAa;AACzC,SACEC,aAAa,EACbC,QAAQ,EACRC,KAAK,EACLC,MAAM,QACD,kBAAkB;AACzB,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,SAASC,aAAa,QAAQ,OAAO;AAErC,SACEC,WAAW,EACXC,aAAa,QACR,eAAe;AACtB,SAASC,WAAW,QAAQ,sBAAsB;AAAC;AAEnD,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB;EACA;EACA,MAAMC,IAAI,GAAGb,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACD,IAAI,CAAC;;EAE/C;EACA,MAAME,KAAK,GAAGhB,OAAO,CAAC,MAAMY,WAAW,CAACH,aAAa,CAACK,IAAI,CAAC,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;;EAErE;EACA,MAAMG,MAAM,GAAGC,OAAO,CAACjB,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACI,KAAK,CAAC,CAAC;EAE3D,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB,QAAC,aAAa;MAAA,uBACZ,QAAC,aAAa;QAAC,KAAK,EAAEH,KAAM;QAAA,wBAE1B,QAAC,WAAW;UAAA;UAAA;UAAA;QAAA,QAAG,eAEf,QAAC,MAAM;UAAA,wBACL,QAAC,KAAK;YACJ,IAAI,EAAC,GAAG;YACR,OAAO,eAAE,QAAC,SAAS;cAAA;cAAA;cAAA;YAAA;UAAI;YAAA;YAAA;YAAA;UAAA,QACvB,eAEF,QAAC,KAAK;YACJ,IAAI,EAAC,OAAO;YACZ,OAAO,EAAEC,MAAM,gBAAG,QAAC,QAAQ;cAAA;cAAA;cAAA;YAAA,QAAG,gBAAG,QAAC,QAAQ;cAAC,EAAE,EAAC;YAAG;cAAA;cAAA;cAAA;YAAA;UAAI;YAAA;YAAA;YAAA;UAAA,QACrD,eAEF,QAAC,KAAK;YACJ,IAAI,EAAC,kBAAkB;YACvB,OAAO,EAAEA,MAAM,gBAAG,QAAC,WAAW;cAAA;cAAA;cAAA;YAAA,QAAG,gBAAG,QAAC,QAAQ;cAAC,EAAE,EAAC;YAAG;cAAA;cAAA;cAAA;YAAA;UAAI;YAAA;YAAA;YAAA;UAAA,QACxD;QAAA;UAAA;UAAA;UAAA;QAAA,QACK;MAAA;QAAA;QAAA;QAAA;MAAA;IACK;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACZ;AAEV,CAAC;AAAC,GAtCIJ,GAAG;EAAA,QAGMZ,WAAW,EAMDA,WAAW;AAAA;AAAA,KAT9BY,GAAG;AAwCT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}